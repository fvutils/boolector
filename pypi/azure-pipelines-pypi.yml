
jobs:
- job: PyPi_Linux
  pool:
   vmImage: 'ubuntu-18.04'
  steps:
  - script: |
      sudo python3 -m pip install wheel twine
    displayName: 'Install wheel+twine'
  - script: |
      docker pull quay.io/pypa/manylinux1_x86_64
      docker build -t pyboolector pypi
    displayName: 'Setup Docker Image'

  - script: |
      chmod +x pypi/build.sh
      docker run -e BUILD_NUM=$(Build.BuildNumber) -v $(Build.Repository.LocalPath):/boolector pyboolector
    displayName: 'Run PyBoolector Build'

  - task: TwineAuthenticate@1
    condition: eq(variables['Build.SourceBranchName'], 'master')
    inputs:
      pythonUploadServiceConnection: pypi-pyboolector
  - script: |
      # Only deploy from master
      if test "$(Build.SourceBranchName)" = "master"; then
          python3 -m twine --version
          echo "Calling twine"
          python3 -m twine upload -r pyboolector --config-file $(PYPIRC_PATH) result/wheelhouse/* result/dist/*.tar.gz
          echo "Calling twine complete"
      fi
    displayName: 'Upload to PyPi'

- job: PyPi_MacOS
  pool:
   vmImage: 'macos-latest'
  strategy:
    matrix:
      production:
        needCython: true
        btorConfig: ''
        btorConfigEnv: ''
      production_clang:
        needCython: true
        btorConfig: ''
        btorConfigEnv: 'CC=clang CXX=clang++'
  steps:
  - script: echo "##vso[task.setvariable variable=ncpus]$(sysctl -n hw.logicalcpu)"
    displayName: 'Determine number of CPUs'

  - script: sudo pip3 install cython wheel twine setuptools
    displayName: 'Install Cython'

  - script: |
      brew remove boost
      ./contrib/setup-btor2tools.sh
      ./contrib/setup-cadical.sh
      ./contrib/setup-lingeling.sh
    displayName: 'Setup dependencies'

  - script: $(btorConfigEnv) ./configure.sh -fPIC $(btorConfig)
    displayName: 'Configure Boolector'

  - script: make -j $(ncpus)
    workingDirectory: 'build'
    displayName: 'Build Boolector'

  - script: |
      cp -r src/api/python pypi/src
      mkdir -p pypi/src/utils
      cp src/*.h pypi/src
      cp src/utils/*.h pypi/src/utils
      cd pypi
      python3 src/mkoptions.py ./src/btortypes.h src/pyboolector_options.pxd
      python3 setup.py sdist bdist_wheel
    displayName: 'Build PyPi package'

